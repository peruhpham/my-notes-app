{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-notes-app\\\\client\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/LoginPage.css';\n// import axios from 'axios';\n\n// function LoginPage() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:5000/api/auth/login', {\n//                 email,\n//                 password\n//             });\n\n//             console.log('Login successful:', response.data);\n\n//             // Lưu token vào localStorage\n//             localStorage.setItem('token', response.data.token);\n//             localStorage.setItem('username', response.data.username);\n\n//             // Điều hướng đến trang ghi chú (ví dụ)\n//             window.location.href = '/notes';\n\n//         } catch (err) {\n//             setError(err.response?.data?.message || 'Login failed');\n//         }\n//     };\n\n//     return (\n//         <div className=\"login-page\">\n//             <h2>Đăng nhập</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                 /><br />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Mật khẩu\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 /><br />\n//                 {error && <p className=\"error\">{error}</p>}\n//                 <button type=\"submit\">Đăng nhập</button>\n//             </form>\n//             <p>\n//                 Chưa có tài khoản? <a href=\"/register\">Đăng ký ngay</a>\n//             </p>\n//             <p>\n//                 <a href=\"/change-password\">Quên mật khẩu?</a>\n//             </p>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        username\n      } = response.data;\n      localStorage.setItem('token', token); // Lưu token vào localStorage\n      localStorage.setItem('username', username); // Lưu tên người dùng vào localStorage\n      navigate('/notes'); // Điều hướng đến trang ghi chú sau khi đăng nhập thành công\n    } catch (err) {\n      setErrorMessage('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"R7T8fpN4u77Zmhb7K2RBH+Hz0S8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","post","token","username","data","localStorage","setItem","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/my-notes-app/client/src/components/LoginPage.jsx"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import '../styles/LoginPage.css';\r\n// import axios from 'axios';\r\n\r\n// function LoginPage() {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n//                 email,\r\n//                 password\r\n//             });\r\n\r\n//             console.log('Login successful:', response.data);\r\n\r\n//             // Lưu token vào localStorage\r\n//             localStorage.setItem('token', response.data.token);\r\n//             localStorage.setItem('username', response.data.username);\r\n\r\n//             // Điều hướng đến trang ghi chú (ví dụ)\r\n//             window.location.href = '/notes';\r\n\r\n//         } catch (err) {\r\n//             setError(err.response?.data?.message || 'Login failed');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page\">\r\n//             <h2>Đăng nhập</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     required\r\n//                 /><br />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Mật khẩu\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 /><br />\r\n//                 {error && <p className=\"error\">{error}</p>}\r\n//                 <button type=\"submit\">Đăng nhập</button>\r\n//             </form>\r\n//             <p>\r\n//                 Chưa có tài khoản? <a href=\"/register\">Đăng ký ngay</a>\r\n//             </p>\r\n//             <p>\r\n//                 <a href=\"/change-password\">Quên mật khẩu?</a>\r\n//             </p>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n            const { token, username } = response.data;\r\n            localStorage.setItem('token', token); // Lưu token vào localStorage\r\n            localStorage.setItem('username', username); // Lưu tên người dùng vào localStorage\r\n            navigate('/notes'); // Điều hướng đến trang ghi chú sau khi đăng nhập thành công\r\n        } catch (err) {\r\n            setErrorMessage('Invalid email or password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)} \r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}