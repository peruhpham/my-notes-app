{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-notes-app\\\\client\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { login } from '../api';\n// import '../styles/LoginPage.css';\n\n// import axios from 'axios';\n\n// // function LoginPage({ onLogin }) {\n// //     const [form, setForm] = useState({ email: '', password: '' });\n// //     const [error, setError] = useState('');\n\n// //     const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n// //     const handleSubmit = async e => {\n// //         e.preventDefault();\n// //         try {\n// //             const { data } = await login(form);\n// //             localStorage.setItem('token', data.token);\n// //             onLogin(data.username);\n// //         } catch (err) {\n// //             setError(err.response?.data?.message || 'Đăng nhập thất bại.');\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"login-container\">\n// //             <h2>Login</h2>\n// //             <form onSubmit={handleSubmit}>\n// //                 <input name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n// //                 <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} required />\n// //                 <button type=\"submit\">Login</button>\n// //             </form>\n// //             <p>{error}</p>\n// //         </div>\n// //     );\n// // }\n\n// function LoginPage() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await axios.post('http://localhost:5000/api/auth/login', {\n//                 email,\n//                 password\n//             });\n\n//             console.log('Login successful:', response.data);\n\n//             // Lưu token vào localStorage\n//             localStorage.setItem('token', response.data.token);\n//             localStorage.setItem('username', response.data.username);\n\n//             // Điều hướng đến trang ghi chú (ví dụ)\n//             window.location.href = '/notes';\n\n//         } catch (err) {\n//             setError(err.response?.data?.message || 'Login failed');\n//         }\n//     };\n\n//     return (\n//         <div className=\"login-page\">\n//             <h2>Đăng nhập</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                 /><br />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Mật khẩu\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 /><br />\n//                 {error && <p className=\"error\">{error}</p>}\n//                 <button type=\"submit\">Đăng nhập</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n\n// LoginPage.jsx - Cập nhật: sử dụng useNavigate để điều hướng\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        username\n      } = response.data;\n      // Lưu token và username vào localStorage hoặc Context nếu cần\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      // Điều hướng đến trang /notes khi đăng nhập thành công\n      navigate('/notes');\n    } catch (error) {\n      setError('Đăng nhập thất bại. Vui lòng kiểm tra email hoặc mật khẩu.');\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0110\\u0103ng nh\\u1EADp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"M\\u1EADt kh\\u1EA9u:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0110\\u0103ng nh\\u1EADp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","event","preventDefault","response","post","token","username","data","localStorage","setItem","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["D:/my-notes-app/client/src/components/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { login } from '../api';\r\n// import '../styles/LoginPage.css';\r\n\r\n// import axios from 'axios';\r\n\r\n// // function LoginPage({ onLogin }) {\r\n// //     const [form, setForm] = useState({ email: '', password: '' });\r\n// //     const [error, setError] = useState('');\r\n\r\n// //     const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n// //     const handleSubmit = async e => {\r\n// //         e.preventDefault();\r\n// //         try {\r\n// //             const { data } = await login(form);\r\n// //             localStorage.setItem('token', data.token);\r\n// //             onLogin(data.username);\r\n// //         } catch (err) {\r\n// //             setError(err.response?.data?.message || 'Đăng nhập thất bại.');\r\n// //         }\r\n// //     };\r\n\r\n    \r\n\r\n// //     return (\r\n// //         <div className=\"login-container\">\r\n// //             <h2>Login</h2>\r\n// //             <form onSubmit={handleSubmit}>\r\n// //                 <input name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n// //                 <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n// //                 <button type=\"submit\">Login</button>\r\n// //             </form>\r\n// //             <p>{error}</p>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n\r\n// function LoginPage() {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n//                 email,\r\n//                 password\r\n//             });\r\n\r\n//             console.log('Login successful:', response.data);\r\n\r\n//             // Lưu token vào localStorage\r\n//             localStorage.setItem('token', response.data.token);\r\n//             localStorage.setItem('username', response.data.username);\r\n\r\n//             // Điều hướng đến trang ghi chú (ví dụ)\r\n//             window.location.href = '/notes';\r\n\r\n//         } catch (err) {\r\n//             setError(err.response?.data?.message || 'Login failed');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page\">\r\n//             <h2>Đăng nhập</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     required\r\n//                 /><br />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Mật khẩu\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 /><br />\r\n//                 {error && <p className=\"error\">{error}</p>}\r\n//                 <button type=\"submit\">Đăng nhập</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n// LoginPage.jsx - Cập nhật: sử dụng useNavigate để điều hướng\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token, username } = response.data;\r\n      // Lưu token và username vào localStorage hoặc Context nếu cần\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('username', username);\r\n      // Điều hướng đến trang /notes khi đăng nhập thành công\r\n      navigate('/notes');\r\n    } catch (error) {\r\n      setError('Đăng nhập thất bại. Vui lòng kiểm tra email hoặc mật khẩu.');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Đăng nhập</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Mật khẩu:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\">Đăng nhập</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}