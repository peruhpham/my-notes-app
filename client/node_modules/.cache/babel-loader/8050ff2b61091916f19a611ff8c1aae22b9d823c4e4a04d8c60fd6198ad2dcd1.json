{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-notes-app\\\\client\\\\src\\\\components\\\\NotesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/NotesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotesPage() {\n  _s();\n  const navigate = useNavigate();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [user, setUser] = useState({}); // Lưu thông tin người dùng\n\n  // Lấy thông tin người dùng\n  const fetchUser = async () => {\n    const token = localStorage.getItem('token');\n\n    // const res = await axios.get('http://localhost:5000/api/auth/me', {\n    //     headers: { Authorization: `Bearer ${token}` },\n    // });\n    // setUser(res.data); // Lưu thông tin người dùng\n\n    // try {\n    //     const res = await axios.get('http://localhost:5000/api/auth/me', {\n    //         headers: { Authorization: `Bearer ${token}` },\n    //     });\n    //     setUser(res.data); // Lưu thông tin người dùng\n    // } catch (err) {\n    //     console.error('Failed to fetch user:', err);\n    //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\n    // }\n  };\n\n  // const fetchUser = async () => {\n  //     const token = localStorage.getItem('token');\n  //     try {\n  //         const res = await axios.get('http://localhost:5000/api/auth/me', {\n  //             headers: { Authorization: `Bearer ${token}` },\n  //         });\n  //         setUser(res.data);\n  //         return true;\n  //     } catch (err) {\n  //         console.error('Failed to fetch user:', err);\n  //         navigate('/');\n  //         return false;\n  //     }\n  // };\n\n  // Lấy danh sách ghi chú\n  const fetchNotes = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const res = await axios.get('http://localhost:5000/api/notes', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotes(res.data);\n    } catch (err) {\n      console.error('Failed to fetch notes:', err);\n    }\n  };\n\n  // Thêm ghi chú mới\n  const handleAddNote = async () => {\n    const token = localStorage.getItem('token');\n    if (!newNote.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/notes', {\n        content: newNote\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewNote('');\n      fetchNotes();\n    } catch (err) {\n      console.error('Failed to add note:', err);\n    }\n  };\n\n  // Đăng xuất\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  useEffect(() => {\n    fetchUser(); // Lấy thông tin người dùng\n    fetchNotes(); // Lấy danh sách ghi chú\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"user-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar || \"https://marketplace.canva.com/b0LFw/MAFW8jb0LFw/1/tl/canva-boy-avatar-illustration-set-collection-MAFW8jb0LFw.png\",\n            alt: \"User Avatar\",\n            className: \"user-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: user.name || \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Teamspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"L\\u1ECBch h\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"N22DCCN160\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"AI - ARTIFICIAL INTELLIGENCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"DATABASE-EXERCISE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Good afternoon, \", user.name || \"User\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search or find anything...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"notes-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-grid\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card\",\n            children: note.content\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a new note...\",\n            value: newNote,\n            onChange: e => setNewNote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesPage, \"s72Zz5BqPDLtEWqXmppdQ2SZWlM=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesPage;\nexport default NotesPage;\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/NotesPage.css';\n\n// const NotesPage = () => {\n//     const [user, setUser] = useState({});\n//     const [notes, setNotes] = useState([]);\n//     const [newNote, setNewNote] = useState('');\n//     const navigate = useNavigate();\n\n//     // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\n//     const fetchUser = useCallback(async () => {\n//         const token = localStorage.getItem('token');\n//         if (!token) {\n//             navigate('/');\n//             return false;\n//         }\n\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/auth/me', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setUser(res.data);\n//             return true;\n//         } catch (err) {\n//             console.error('Failed to fetch user:', err);\n//             navigate('/');\n//             return false;\n//         }\n//     }, [navigate]);\n\n//     // Fetch ghi chú\n//     const fetchNotes = async () => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/notes', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNotes(res.data);\n//         } catch (err) {\n//             console.error('Failed to fetch notes:', err);\n//         }\n//     };\n\n//     // Thêm ghi chú mới\n//     const handleAddNote = async () => {\n//         const token = localStorage.getItem('token');\n//         if (!newNote.trim()) return;\n//         try {\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNewNote('');\n//             fetchNotes();\n//         } catch (err) {\n//             console.error('Failed to add note:', err);\n//         }\n//     };\n\n//     // Đăng xuất\n//     const handleLogout = () => {\n//         localStorage.removeItem('token');\n//         navigate('/');\n//     };\n\n//     useEffect(() => {\n//         const init = async () => {\n//             const isAuthenticated = await fetchUser();\n//             if (isAuthenticated) {\n//                 fetchNotes();\n//             }\n//         };\n//         init();\n//     }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback và thêm vào dependency array\n\n//     return (\n//         <div className=\"home-notes-container\">\n//             <aside className=\"sidebar\">\n//                 <header className=\"user-header\">\n//                     <div className=\"user-info\">\n//                         <img \n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \n//                             alt=\"User Avatar\" \n//                             className=\"user-avatar\" \n//                         />\n//                         <span className=\"user-name\">{user?.name || \"User\"}</span>\n//                     </div>\n//                 </header>\n//                 <h3>Teamspaces</h3>\n//                 <ul>\n//                     <li>Home</li>\n//                     <li>Blog</li>\n//                     <li>List notes</li>\n//                     <li>..</li>\n//                     <li>..</li>\n//                 </ul>\n//                 <button className=\"invite-btn\">Invite members</button>\n//                 <button className=\"logout-btn\" onClick={handleLogout}>Đăng xuất</button>\n//             </aside>\n\n//             <main className=\"main-content\">\n//                 <header className=\"header\">\n//                     <h2>Good afternoon, {user?.name || \"User\"}</h2>\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\n//                 </header>\n\n//                 <section className=\"note-input\">\n//                     <textarea\n//                         placeholder=\"Viết ghi chú mới...\"\n//                         value={newNote}\n//                         onChange={(e) => setNewNote(e.target.value)}\n//                     />\n//                     <button className=\"add-btn\" onClick={handleAddNote}>+ Thêm ghi chú</button>\n//                 </section>\n\n//                 <section className=\"recent-notes\">\n//                     <h3>Ghi chú gần đây</h3>\n//                     <div className=\"notes-grid\">\n//                         {notes.map(note => (\n//                             <div key={note.id} className=\"note-card\">\n//                                 {note.content}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","NotesPage","_s","navigate","notes","setNotes","newNote","setNewNote","user","setUser","fetchUser","token","localStorage","getItem","fetchNotes","res","get","headers","Authorization","data","err","console","error","handleAddNote","trim","post","content","handleLogout","removeItem","className","children","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","type","placeholder","map","note","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/my-notes-app/client/src/components/NotesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/NotesPage.css';\r\n\r\nfunction NotesPage() {\r\n    const navigate = useNavigate();\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('');\r\n    const [user, setUser] = useState({}); // Lưu thông tin người dùng\r\n\r\n    // Lấy thông tin người dùng\r\n    const fetchUser = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        // const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n        //     headers: { Authorization: `Bearer ${token}` },\r\n        // });\r\n        // setUser(res.data); // Lưu thông tin người dùng\r\n\r\n        // try {\r\n        //     const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n        //         headers: { Authorization: `Bearer ${token}` },\r\n        //     });\r\n        //     setUser(res.data); // Lưu thông tin người dùng\r\n        // } catch (err) {\r\n        //     console.error('Failed to fetch user:', err);\r\n        //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\r\n        // }\r\n    };\r\n\r\n    // const fetchUser = async () => {\r\n    //     const token = localStorage.getItem('token');\r\n    //     try {\r\n    //         const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n    //             headers: { Authorization: `Bearer ${token}` },\r\n    //         });\r\n    //         setUser(res.data);\r\n    //         return true;\r\n    //     } catch (err) {\r\n    //         console.error('Failed to fetch user:', err);\r\n    //         navigate('/');\r\n    //         return false;\r\n    //     }\r\n    // };\r\n    \r\n\r\n    // Lấy danh sách ghi chú\r\n    const fetchNotes = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/notes', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setNotes(res.data);\r\n        } catch (err) {\r\n            console.error('Failed to fetch notes:', err);\r\n        }\r\n    };\r\n\r\n    // Thêm ghi chú mới\r\n    const handleAddNote = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!newNote.trim()) return;\r\n        try {\r\n            await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setNewNote('');\r\n            fetchNotes();\r\n        } catch (err) {\r\n            console.error('Failed to add note:', err);\r\n        }\r\n    };\r\n\r\n    // Đăng xuất\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        navigate('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUser(); // Lấy thông tin người dùng\r\n        fetchNotes(); // Lấy danh sách ghi chú\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home-notes-container\">\r\n            {/* Sidebar */}\r\n            <aside className=\"sidebar\">\r\n                <header className=\"user-header\">\r\n                    <div className=\"user-info\">\r\n                        <img \r\n                            src={user.avatar || \"https://marketplace.canva.com/b0LFw/MAFW8jb0LFw/1/tl/canva-boy-avatar-illustration-set-collection-MAFW8jb0LFw.png\"} \r\n                            alt=\"User Avatar\" \r\n                            className=\"user-avatar\" \r\n                        />\r\n                        <span className=\"user-name\">{user.name || \"User\"}</span>\r\n                    </div>\r\n                    {/* <button className=\"logout-btn\" onClick={handleLogout}>Logout</button> */}\r\n                </header>\r\n                <h3>Teamspaces</h3>\r\n                \r\n                <ul>\r\n                    <li>Homepage</li>\r\n                    <li>Lịch học</li>\r\n                    <li>N22DCCN160</li>\r\n                    <li>AI - ARTIFICIAL INTELLIGENCE</li>\r\n                    <li>DATABASE-EXERCISE</li>\r\n                </ul>\r\n\r\n                <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n            </aside>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"main-content\">\r\n                <header className=\"header\">\r\n                    <h2>Good afternoon, {user.name || \"User\"}</h2>\r\n                    <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n                </header>\r\n\r\n                <section className=\"notes-section\">\r\n                    <h3>Your Notes</h3>\r\n                    <div className=\"notes-grid\">\r\n                        {notes.map((note) => (\r\n                            <div key={note.id} className=\"note-card\">\r\n                                {note.content}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"add-note\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Add a new note...\"\r\n                            value={newNote}\r\n                            onChange={(e) => setNewNote(e.target.value)}\r\n                        />\r\n                        <button onClick={handleAddNote}>Add Note</button>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotesPage;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useCallback } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/NotesPage.css';\r\n\r\n// const NotesPage = () => {\r\n//     const [user, setUser] = useState({});\r\n//     const [notes, setNotes] = useState([]);\r\n//     const [newNote, setNewNote] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\r\n//     const fetchUser = useCallback(async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!token) {\r\n//             navigate('/');\r\n//             return false;\r\n//         }\r\n\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setUser(res.data);\r\n//             return true;\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch user:', err);\r\n//             navigate('/');\r\n//             return false;\r\n//         }\r\n//     }, [navigate]);\r\n\r\n//     // Fetch ghi chú\r\n//     const fetchNotes = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/notes', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNotes(res.data);\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch notes:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Thêm ghi chú mới\r\n//     const handleAddNote = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!newNote.trim()) return;\r\n//         try {\r\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNewNote('');\r\n//             fetchNotes();\r\n//         } catch (err) {\r\n//             console.error('Failed to add note:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Đăng xuất\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token');\r\n//         navigate('/');\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const init = async () => {\r\n//             const isAuthenticated = await fetchUser();\r\n//             if (isAuthenticated) {\r\n//                 fetchNotes();\r\n//             }\r\n//         };\r\n//         init();\r\n//     }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback và thêm vào dependency array\r\n\r\n//     return (\r\n//         <div className=\"home-notes-container\">\r\n//             <aside className=\"sidebar\">\r\n//                 <header className=\"user-header\">\r\n//                     <div className=\"user-info\">\r\n//                         <img \r\n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \r\n//                             alt=\"User Avatar\" \r\n//                             className=\"user-avatar\" \r\n//                         />\r\n//                         <span className=\"user-name\">{user?.name || \"User\"}</span>\r\n//                     </div>\r\n//                 </header>\r\n//                 <h3>Teamspaces</h3>\r\n//                 <ul>\r\n//                     <li>Home</li>\r\n//                     <li>Blog</li>\r\n//                     <li>List notes</li>\r\n//                     <li>..</li>\r\n//                     <li>..</li>\r\n//                 </ul>\r\n//                 <button className=\"invite-btn\">Invite members</button>\r\n//                 <button className=\"logout-btn\" onClick={handleLogout}>Đăng xuất</button>\r\n//             </aside>\r\n\r\n//             <main className=\"main-content\">\r\n//                 <header className=\"header\">\r\n//                     <h2>Good afternoon, {user?.name || \"User\"}</h2>\r\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n//                 </header>\r\n\r\n//                 <section className=\"note-input\">\r\n//                     <textarea\r\n//                         placeholder=\"Viết ghi chú mới...\"\r\n//                         value={newNote}\r\n//                         onChange={(e) => setNewNote(e.target.value)}\r\n//                     />\r\n//                     <button className=\"add-btn\" onClick={handleAddNote}>+ Thêm ghi chú</button>\r\n//                 </section>\r\n\r\n//                 <section className=\"recent-notes\">\r\n//                     <h3>Ghi chú gần đây</h3>\r\n//                     <div className=\"notes-grid\">\r\n//                         {notes.map(note => (\r\n//                             <div key={note.id} className=\"note-card\">\r\n//                                 {note.content}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default NotesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}