{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-notes-app\\\\client\\\\src\\\\components\\\\NotesPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/NotesPage.css';\n\n// function NotesPage() {\n//     const navigate = useNavigate();\n//     const [notes, setNotes] = useState([]);\n//     const [newNote, setNewNote] = useState('');\n//     const [user, setUser] = useState({}); // Lưu thông tin người dùng\n\n//     // Lấy thông tin người dùng\n//     const fetchUser = async () => {\n//         const token = localStorage.getItem('token');\n\n//         // const res = await axios.get('http://localhost:5000/api/auth/me', {\n//         //     headers: { Authorization: `Bearer ${token}` },\n//         // });\n//         // setUser(res.data); // Lưu thông tin người dùng\n\n//         // try {\n//         //     const res = await axios.get('http://localhost:5000/api/auth/me', {\n//         //         headers: { Authorization: `Bearer ${token}` },\n//         //     });\n//         //     setUser(res.data); // Lưu thông tin người dùng\n//         // } catch (err) {\n//         //     console.error('Failed to fetch user:', err);\n//         //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\n//         // }\n//     };\n\n//     // const fetchUser = async () => {\n//     //     const token = localStorage.getItem('token');\n//     //     try {\n//     //         const res = await axios.get('http://localhost:5000/api/auth/me', {\n//     //             headers: { Authorization: `Bearer ${token}` },\n//     //         });\n//     //         setUser(res.data);\n//     //         return true;\n//     //     } catch (err) {\n//     //         console.error('Failed to fetch user:', err);\n//     //         navigate('/');\n//     //         return false;\n//     //     }\n//     // };\n\n//     // Lấy danh sách ghi chú\n//     const fetchNotes = async () => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/notes', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNotes(res.data);\n//         } catch (err) {\n//             console.error('Failed to fetch notes:', err);\n//         }\n//     };\n\n//     // Thêm ghi chú mới\n//     const handleAddNote = async () => {\n//         const token = localStorage.getItem('token');\n//         if (!newNote.trim()) return;\n//         try {\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNewNote('');\n//             fetchNotes();\n//         } catch (err) {\n//             console.error('Failed to add note:', err);\n//         }\n//     };\n\n//     // Đăng xuất\n//     const handleLogout = () => {\n//         localStorage.removeItem('token');\n//         navigate('/');\n//     };\n\n//     useEffect(() => {\n//         fetchUser(); // Lấy thông tin người dùng\n//         fetchNotes(); // Lấy danh sách ghi chú\n//     }, []);\n\n//     return (\n//         <div className=\"home-notes-container\">\n//             {/* Sidebar */}\n//             <aside className=\"sidebar\">\n//                 <header className=\"user-header\">\n//                     <div className=\"user-info\">\n//                         <img \n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \n//                             alt=\"User Avatar\" \n//                             className=\"user-avatar\" \n//                         />\n//                         <span className=\"user-name\">{user.name || \"User\"}</span>\n//                     </div>\n//                     <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n//                 </header>\n//                 <h3>Teamspaces</h3>\n//                 <ul>\n//                     <li>Homepage</li>\n//                     <li>Lịch học</li>\n//                     <li>N22DCCN160</li>\n//                     <li>AI - ARTIFICIAL INTELLIGENCE</li>\n//                     <li>DATABASE-EXERCISE</li>\n//                 </ul>\n//                 <button className=\"invite-btn\">Invite members</button>\n//             </aside>\n\n//             {/* Main Content */}\n//             <main className=\"main-content\">\n//                 <header className=\"header\">\n//                     <h2>Good afternoon, {user.name || \"User\"}</h2>\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\n//                 </header>\n\n//                 <section className=\"notes-section\">\n//                     <h3>Your Notes</h3>\n//                     <div className=\"notes-grid\">\n//                         {notes.map((note) => (\n//                             <div key={note.id} className=\"note-card\">\n//                                 {note.content}\n//                             </div>\n//                         ))}\n//                     </div>\n//                     <div className=\"add-note\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Add a new note...\"\n//                             value={newNote}\n//                             onChange={(e) => setNewNote(e.target.value)}\n//                         />\n//                         <button onClick={handleAddNote}>Add Note</button>\n//                     </div>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// }\n\n// export default NotesPage;\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/NotesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const navigate = useNavigate();\n\n  // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\n  const fetchUser = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n      return false;\n    }\n    try {\n      const res = await axios.get('http://localhost:5000/api/auth/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(res.data);\n      return true;\n    } catch (err) {\n      console.error('Failed to fetch user:', err);\n      navigate('/');\n      return false;\n    }\n  }, [navigate]);\n\n  // Fetch ghi chú\n  const fetchNotes = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const res = await axios.get('http://localhost:5000/api/notes', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotes(res.data);\n    } catch (err) {\n      console.error('Failed to fetch notes:', err);\n    }\n  };\n\n  // Thêm ghi chú mới\n  const handleAddNote = async () => {\n    const token = localStorage.getItem('token');\n    if (!newNote.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/notes', {\n        content: newNote\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewNote('');\n      fetchNotes();\n    } catch (err) {\n      console.error('Failed to add note:', err);\n    }\n  };\n\n  // Đăng xuất\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  useEffect(() => {\n    const init = async () => {\n      const isAuthenticated = await fetchUser();\n      if (isAuthenticated) {\n        fetchNotes();\n      }\n    };\n    init();\n  }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-notes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"user-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar || \"https://via.placeholder.com/40\",\n            alt: \"User Avatar\",\n            className: \"user-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: (user === null || user === void 0 ? void 0 : user.name) || \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Teamspaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"List notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"invite-btn\",\n        children: \"Invite members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Good afternoon, \", (user === null || user === void 0 ? void 0 : user.name) || \"User\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search or find anything...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"note-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Vi\\u1EBFt ghi ch\\xFA m\\u1EDBi...\",\n          value: newNote,\n          onChange: e => setNewNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          onClick: handleAddNote,\n          children: \"+ Th\\xEAm ghi ch\\xFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"recent-notes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ghi ch\\xFA g\\u1EA7n \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-grid\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-card\",\n            children: note.content\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesPage, \"Z7Fuc0TRZizPJZxn/KzW5tqeIs0=\", false, function () {\n  return [useNavigate];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","NotesPage","_s","user","setUser","notes","setNotes","newNote","setNewNote","navigate","fetchUser","token","localStorage","getItem","res","get","headers","Authorization","data","err","console","error","fetchNotes","handleAddNote","trim","post","content","handleLogout","removeItem","init","isAuthenticated","className","children","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","type","placeholder","value","onChange","e","target","map","note","id","_c","$RefreshReg$"],"sources":["D:/my-notes-app/client/src/components/NotesPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/NotesPage.css';\r\n\r\n// function NotesPage() {\r\n//     const navigate = useNavigate();\r\n//     const [notes, setNotes] = useState([]);\r\n//     const [newNote, setNewNote] = useState('');\r\n//     const [user, setUser] = useState({}); // Lưu thông tin người dùng\r\n\r\n//     // Lấy thông tin người dùng\r\n//     const fetchUser = async () => {\r\n//         const token = localStorage.getItem('token');\r\n\r\n//         // const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//         //     headers: { Authorization: `Bearer ${token}` },\r\n//         // });\r\n//         // setUser(res.data); // Lưu thông tin người dùng\r\n\r\n//         // try {\r\n//         //     const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//         //         headers: { Authorization: `Bearer ${token}` },\r\n//         //     });\r\n//         //     setUser(res.data); // Lưu thông tin người dùng\r\n//         // } catch (err) {\r\n//         //     console.error('Failed to fetch user:', err);\r\n//         //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\r\n//         // }\r\n//     };\r\n\r\n//     // const fetchUser = async () => {\r\n//     //     const token = localStorage.getItem('token');\r\n//     //     try {\r\n//     //         const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//     //             headers: { Authorization: `Bearer ${token}` },\r\n//     //         });\r\n//     //         setUser(res.data);\r\n//     //         return true;\r\n//     //     } catch (err) {\r\n//     //         console.error('Failed to fetch user:', err);\r\n//     //         navigate('/');\r\n//     //         return false;\r\n//     //     }\r\n//     // };\r\n    \r\n\r\n//     // Lấy danh sách ghi chú\r\n//     const fetchNotes = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/notes', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNotes(res.data);\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch notes:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Thêm ghi chú mới\r\n//     const handleAddNote = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!newNote.trim()) return;\r\n//         try {\r\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNewNote('');\r\n//             fetchNotes();\r\n//         } catch (err) {\r\n//             console.error('Failed to add note:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Đăng xuất\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token');\r\n//         navigate('/');\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchUser(); // Lấy thông tin người dùng\r\n//         fetchNotes(); // Lấy danh sách ghi chú\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className=\"home-notes-container\">\r\n//             {/* Sidebar */}\r\n//             <aside className=\"sidebar\">\r\n//                 <header className=\"user-header\">\r\n//                     <div className=\"user-info\">\r\n//                         <img \r\n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \r\n//                             alt=\"User Avatar\" \r\n//                             className=\"user-avatar\" \r\n//                         />\r\n//                         <span className=\"user-name\">{user.name || \"User\"}</span>\r\n//                     </div>\r\n//                     <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n//                 </header>\r\n//                 <h3>Teamspaces</h3>\r\n//                 <ul>\r\n//                     <li>Homepage</li>\r\n//                     <li>Lịch học</li>\r\n//                     <li>N22DCCN160</li>\r\n//                     <li>AI - ARTIFICIAL INTELLIGENCE</li>\r\n//                     <li>DATABASE-EXERCISE</li>\r\n//                 </ul>\r\n//                 <button className=\"invite-btn\">Invite members</button>\r\n//             </aside>\r\n\r\n//             {/* Main Content */}\r\n//             <main className=\"main-content\">\r\n//                 <header className=\"header\">\r\n//                     <h2>Good afternoon, {user.name || \"User\"}</h2>\r\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n//                 </header>\r\n\r\n//                 <section className=\"notes-section\">\r\n//                     <h3>Your Notes</h3>\r\n//                     <div className=\"notes-grid\">\r\n//                         {notes.map((note) => (\r\n//                             <div key={note.id} className=\"note-card\">\r\n//                                 {note.content}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                     <div className=\"add-note\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"Add a new note...\"\r\n//                             value={newNote}\r\n//                             onChange={(e) => setNewNote(e.target.value)}\r\n//                         />\r\n//                         <button onClick={handleAddNote}>Add Note</button>\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default NotesPage;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/NotesPage.css';\r\n\r\nconst NotesPage = () => {\r\n    const [user, setUser] = useState({});\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\r\n    const fetchUser = useCallback(async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            navigate('/');\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setUser(res.data);\r\n            return true;\r\n        } catch (err) {\r\n            console.error('Failed to fetch user:', err);\r\n            navigate('/');\r\n            return false;\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Fetch ghi chú\r\n    const fetchNotes = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/notes', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setNotes(res.data);\r\n        } catch (err) {\r\n            console.error('Failed to fetch notes:', err);\r\n        }\r\n    };\r\n\r\n    // Thêm ghi chú mới\r\n    const handleAddNote = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!newNote.trim()) return;\r\n        try {\r\n            await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setNewNote('');\r\n            fetchNotes();\r\n        } catch (err) {\r\n            console.error('Failed to add note:', err);\r\n        }\r\n    };\r\n\r\n    // Đăng xuất\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        navigate('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            const isAuthenticated = await fetchUser();\r\n            if (isAuthenticated) {\r\n                fetchNotes();\r\n            }\r\n        };\r\n        init();\r\n    }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback\r\n\r\n    return (\r\n        <div className=\"home-notes-container\">\r\n            <aside className=\"sidebar\">\r\n                <header className=\"user-header\">\r\n                    <div className=\"user-info\">\r\n                        <img \r\n                            src={user.avatar || \"https://via.placeholder.com/40\"} \r\n                            alt=\"User Avatar\" \r\n                            className=\"user-avatar\" \r\n                        />\r\n                        <span className=\"user-name\">{user?.name || \"User\"}</span>\r\n                    </div>\r\n                </header>\r\n                <h3>Teamspaces</h3>\r\n                <ul>\r\n                    <li>Home</li>\r\n                    <li>Blog</li>\r\n                    <li>List notes</li>\r\n                    <li>..</li>\r\n                    <li>..</li>\r\n                </ul>\r\n                <button className=\"invite-btn\">Invite members</button>\r\n                <button className=\"logout-btn\" onClick={handleLogout}>Đăng xuất</button>\r\n            </aside>\r\n\r\n            <main className=\"main-content\">\r\n                <header className=\"header\">\r\n                    <h2>Good afternoon, {user?.name || \"User\"}</h2>\r\n                    <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n                </header>\r\n\r\n                <section className=\"note-input\">\r\n                    <textarea\r\n                        placeholder=\"Viết ghi chú mới...\"\r\n                        value={newNote}\r\n                        onChange={(e) => setNewNote(e.target.value)}\r\n                    />\r\n                    <button className=\"add-btn\" onClick={handleAddNote}>+ Thêm ghi chú</button>\r\n                </section>\r\n\r\n                <section className=\"recent-notes\">\r\n                    <h3>Ghi chú gần đây</h3>\r\n                    <div className=\"notes-grid\">\r\n                        {notes.map(note => (\r\n                            <div key={note.id} className=\"note-card\">\r\n                                {note.content}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMY,SAAS,GAAGd,WAAW,CAAC,YAAY;IACtC,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}