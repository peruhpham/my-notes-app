{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/NotesPage.css';\n\n// function NotesPage() {\n//     const navigate = useNavigate();\n//     const [notes, setNotes] = useState([]);\n//     const [newNote, setNewNote] = useState('');\n//     const [user, setUser] = useState({}); // Lưu thông tin người dùng\n\n//     // Lấy thông tin người dùng\n//     const fetchUser = async () => {\n//         const token = localStorage.getItem('token');\n\n//         // const res = await axios.get('http://localhost:5000/api/auth/me', {\n//         //     headers: { Authorization: `Bearer ${token}` },\n//         // });\n//         // setUser(res.data); // Lưu thông tin người dùng\n\n//         // try {\n//         //     const res = await axios.get('http://localhost:5000/api/auth/me', {\n//         //         headers: { Authorization: `Bearer ${token}` },\n//         //     });\n//         //     setUser(res.data); // Lưu thông tin người dùng\n//         // } catch (err) {\n//         //     console.error('Failed to fetch user:', err);\n//         //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\n//         // }\n//     };\n\n//     // const fetchUser = async () => {\n//     //     const token = localStorage.getItem('token');\n//     //     try {\n//     //         const res = await axios.get('http://localhost:5000/api/auth/me', {\n//     //             headers: { Authorization: `Bearer ${token}` },\n//     //         });\n//     //         setUser(res.data);\n//     //         return true;\n//     //     } catch (err) {\n//     //         console.error('Failed to fetch user:', err);\n//     //         navigate('/');\n//     //         return false;\n//     //     }\n//     // };\n\n//     // Lấy danh sách ghi chú\n//     const fetchNotes = async () => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/notes', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNotes(res.data);\n//         } catch (err) {\n//             console.error('Failed to fetch notes:', err);\n//         }\n//     };\n\n//     // Thêm ghi chú mới\n//     const handleAddNote = async () => {\n//         const token = localStorage.getItem('token');\n//         if (!newNote.trim()) return;\n//         try {\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNewNote('');\n//             fetchNotes();\n//         } catch (err) {\n//             console.error('Failed to add note:', err);\n//         }\n//     };\n\n//     // Đăng xuất\n//     const handleLogout = () => {\n//         localStorage.removeItem('token');\n//         navigate('/');\n//     };\n\n//     useEffect(() => {\n//         fetchUser(); // Lấy thông tin người dùng\n//         fetchNotes(); // Lấy danh sách ghi chú\n//     }, []);\n\n//     return (\n//         <div className=\"home-notes-container\">\n//             {/* Sidebar */}\n//             <aside className=\"sidebar\">\n//                 <header className=\"user-header\">\n//                     <div className=\"user-info\">\n//                         <img \n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \n//                             alt=\"User Avatar\" \n//                             className=\"user-avatar\" \n//                         />\n//                         <span className=\"user-name\">{user.name || \"User\"}</span>\n//                     </div>\n//                     <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n//                 </header>\n//                 <h3>Teamspaces</h3>\n//                 <ul>\n//                     <li>Homepage</li>\n//                     <li>Lịch học</li>\n//                     <li>N22DCCN160</li>\n//                     <li>AI - ARTIFICIAL INTELLIGENCE</li>\n//                     <li>DATABASE-EXERCISE</li>\n//                 </ul>\n//                 <button className=\"invite-btn\">Invite members</button>\n//             </aside>\n\n//             {/* Main Content */}\n//             <main className=\"main-content\">\n//                 <header className=\"header\">\n//                     <h2>Good afternoon, {user.name || \"User\"}</h2>\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\n//                 </header>\n\n//                 <section className=\"notes-section\">\n//                     <h3>Your Notes</h3>\n//                     <div className=\"notes-grid\">\n//                         {notes.map((note) => (\n//                             <div key={note.id} className=\"note-card\">\n//                                 {note.content}\n//                             </div>\n//                         ))}\n//                     </div>\n//                     <div className=\"add-note\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Add a new note...\"\n//                             value={newNote}\n//                             onChange={(e) => setNewNote(e.target.value)}\n//                         />\n//                         <button onClick={handleAddNote}>Add Note</button>\n//                     </div>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// }\n\n// export default NotesPage;\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/NotesPage.css';\n\n// const NotesPage = () => {\n//     const [user, setUser] = useState({});\n//     const [notes, setNotes] = useState([]);\n//     const [newNote, setNewNote] = useState('');\n//     const navigate = useNavigate();\n\n//     // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\n//     const fetchUser = useCallback(async () => {\n//         const token = localStorage.getItem('token');\n//         if (!token) {\n//             navigate('/');\n//             return false;\n//         }\n\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/auth/me', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setUser(res.data);\n//             return true;\n//         } catch (err) {\n//             console.error('Failed to fetch user:', err);\n//             navigate('/');\n//             return false;\n//         }\n//     }, [navigate]);\n\n//     // Fetch ghi chú\n//     const fetchNotes = async () => {\n//         const token = localStorage.getItem('token');\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/notes', {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNotes(res.data);\n//         } catch (err) {\n//             console.error('Failed to fetch notes:', err);\n//         }\n//     };\n\n//     // Thêm ghi chú mới\n//     const handleAddNote = async () => {\n//         const token = localStorage.getItem('token');\n//         if (!newNote.trim()) return;\n//         try {\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setNewNote('');\n//             fetchNotes();\n//         } catch (err) {\n//             console.error('Failed to add note:', err);\n//         }\n//     };\n\n//     // Đăng xuất\n//     const handleLogout = () => {\n//         localStorage.removeItem('token');\n//         navigate('/');\n//     };\n\n//     useEffect(() => {\n//         const init = async () => {\n//             const isAuthenticated = await fetchUser();\n//             if (isAuthenticated) {\n//                 fetchNotes();\n//             }\n//         };\n//         init();\n//     }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback và thêm vào dependency array\n\n//     return (\n//         <div className=\"home-notes-container\">\n//             <aside className=\"sidebar\">\n//                 <header className=\"user-header\">\n//                     <div className=\"user-info\">\n//                         <img \n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \n//                             alt=\"User Avatar\" \n//                             className=\"user-avatar\" \n//                         />\n//                         <span className=\"user-name\">{user?.name || \"User\"}</span>\n//                     </div>\n//                 </header>\n//                 <h3>Teamspaces</h3>\n//                 <ul>\n//                     <li>Home</li>\n//                     <li>Blog</li>\n//                     <li>List notes</li>\n//                     <li>..</li>\n//                     <li>..</li>\n//                 </ul>\n//                 <button className=\"invite-btn\">Invite members</button>\n//                 <button className=\"logout-btn\" onClick={handleLogout}>Đăng xuất</button>\n//             </aside>\n\n//             <main className=\"main-content\">\n//                 <header className=\"header\">\n//                     <h2>Good afternoon, {user?.name || \"User\"}</h2>\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\n//                 </header>\n\n//                 <section className=\"note-input\">\n//                     <textarea\n//                         placeholder=\"Viết ghi chú mới...\"\n//                         value={newNote}\n//                         onChange={(e) => setNewNote(e.target.value)}\n//                     />\n//                     <button className=\"add-btn\" onClick={handleAddNote}>+ Thêm ghi chú</button>\n//                 </section>\n\n//                 <section className=\"recent-notes\">\n//                     <h3>Ghi chú gần đây</h3>\n//                     <div className=\"notes-grid\">\n//                         {notes.map(note => (\n//                             <div key={note.id} className=\"note-card\">\n//                                 {note.content}\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </section>\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default NotesPage;","map":{"version":3,"names":[],"sources":["D:/my-notes-app/client/src/components/NotesPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/NotesPage.css';\r\n\r\n// function NotesPage() {\r\n//     const navigate = useNavigate();\r\n//     const [notes, setNotes] = useState([]);\r\n//     const [newNote, setNewNote] = useState('');\r\n//     const [user, setUser] = useState({}); // Lưu thông tin người dùng\r\n\r\n//     // Lấy thông tin người dùng\r\n//     const fetchUser = async () => {\r\n//         const token = localStorage.getItem('token');\r\n\r\n//         // const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//         //     headers: { Authorization: `Bearer ${token}` },\r\n//         // });\r\n//         // setUser(res.data); // Lưu thông tin người dùng\r\n\r\n//         // try {\r\n//         //     const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//         //         headers: { Authorization: `Bearer ${token}` },\r\n//         //     });\r\n//         //     setUser(res.data); // Lưu thông tin người dùng\r\n//         // } catch (err) {\r\n//         //     console.error('Failed to fetch user:', err);\r\n//         //     navigate('/'); // Điều hướng về trang đăng nhập nếu token không hợp lệ\r\n//         // }\r\n//     };\r\n\r\n//     // const fetchUser = async () => {\r\n//     //     const token = localStorage.getItem('token');\r\n//     //     try {\r\n//     //         const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//     //             headers: { Authorization: `Bearer ${token}` },\r\n//     //         });\r\n//     //         setUser(res.data);\r\n//     //         return true;\r\n//     //     } catch (err) {\r\n//     //         console.error('Failed to fetch user:', err);\r\n//     //         navigate('/');\r\n//     //         return false;\r\n//     //     }\r\n//     // };\r\n    \r\n\r\n//     // Lấy danh sách ghi chú\r\n//     const fetchNotes = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/notes', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNotes(res.data);\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch notes:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Thêm ghi chú mới\r\n//     const handleAddNote = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!newNote.trim()) return;\r\n//         try {\r\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNewNote('');\r\n//             fetchNotes();\r\n//         } catch (err) {\r\n//             console.error('Failed to add note:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Đăng xuất\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token');\r\n//         navigate('/');\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchUser(); // Lấy thông tin người dùng\r\n//         fetchNotes(); // Lấy danh sách ghi chú\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className=\"home-notes-container\">\r\n//             {/* Sidebar */}\r\n//             <aside className=\"sidebar\">\r\n//                 <header className=\"user-header\">\r\n//                     <div className=\"user-info\">\r\n//                         <img \r\n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \r\n//                             alt=\"User Avatar\" \r\n//                             className=\"user-avatar\" \r\n//                         />\r\n//                         <span className=\"user-name\">{user.name || \"User\"}</span>\r\n//                     </div>\r\n//                     <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n//                 </header>\r\n//                 <h3>Teamspaces</h3>\r\n//                 <ul>\r\n//                     <li>Homepage</li>\r\n//                     <li>Lịch học</li>\r\n//                     <li>N22DCCN160</li>\r\n//                     <li>AI - ARTIFICIAL INTELLIGENCE</li>\r\n//                     <li>DATABASE-EXERCISE</li>\r\n//                 </ul>\r\n//                 <button className=\"invite-btn\">Invite members</button>\r\n//             </aside>\r\n\r\n//             {/* Main Content */}\r\n//             <main className=\"main-content\">\r\n//                 <header className=\"header\">\r\n//                     <h2>Good afternoon, {user.name || \"User\"}</h2>\r\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n//                 </header>\r\n\r\n//                 <section className=\"notes-section\">\r\n//                     <h3>Your Notes</h3>\r\n//                     <div className=\"notes-grid\">\r\n//                         {notes.map((note) => (\r\n//                             <div key={note.id} className=\"note-card\">\r\n//                                 {note.content}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                     <div className=\"add-note\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"Add a new note...\"\r\n//                             value={newNote}\r\n//                             onChange={(e) => setNewNote(e.target.value)}\r\n//                         />\r\n//                         <button onClick={handleAddNote}>Add Note</button>\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default NotesPage;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useCallback } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../styles/NotesPage.css';\r\n\r\n// const NotesPage = () => {\r\n//     const [user, setUser] = useState({});\r\n//     const [notes, setNotes] = useState([]);\r\n//     const [newNote, setNewNote] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     // Sử dụng useCallback để tránh tái tạo hàm fetchUser mỗi lần render\r\n//     const fetchUser = useCallback(async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!token) {\r\n//             navigate('/');\r\n//             return false;\r\n//         }\r\n\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setUser(res.data);\r\n//             return true;\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch user:', err);\r\n//             navigate('/');\r\n//             return false;\r\n//         }\r\n//     }, [navigate]);\r\n\r\n//     // Fetch ghi chú\r\n//     const fetchNotes = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/notes', {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNotes(res.data);\r\n//         } catch (err) {\r\n//             console.error('Failed to fetch notes:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Thêm ghi chú mới\r\n//     const handleAddNote = async () => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!newNote.trim()) return;\r\n//         try {\r\n//             await axios.post('http://localhost:5000/api/notes', { content: newNote }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setNewNote('');\r\n//             fetchNotes();\r\n//         } catch (err) {\r\n//             console.error('Failed to add note:', err);\r\n//         }\r\n//     };\r\n\r\n//     // Đăng xuất\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem('token');\r\n//         navigate('/');\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const init = async () => {\r\n//             const isAuthenticated = await fetchUser();\r\n//             if (isAuthenticated) {\r\n//                 fetchNotes();\r\n//             }\r\n//         };\r\n//         init();\r\n//     }, [fetchUser]); // fetchUser đã được sử dụng trong useCallback và thêm vào dependency array\r\n\r\n//     return (\r\n//         <div className=\"home-notes-container\">\r\n//             <aside className=\"sidebar\">\r\n//                 <header className=\"user-header\">\r\n//                     <div className=\"user-info\">\r\n//                         <img \r\n//                             src={user.avatar || \"https://via.placeholder.com/40\"} \r\n//                             alt=\"User Avatar\" \r\n//                             className=\"user-avatar\" \r\n//                         />\r\n//                         <span className=\"user-name\">{user?.name || \"User\"}</span>\r\n//                     </div>\r\n//                 </header>\r\n//                 <h3>Teamspaces</h3>\r\n//                 <ul>\r\n//                     <li>Home</li>\r\n//                     <li>Blog</li>\r\n//                     <li>List notes</li>\r\n//                     <li>..</li>\r\n//                     <li>..</li>\r\n//                 </ul>\r\n//                 <button className=\"invite-btn\">Invite members</button>\r\n//                 <button className=\"logout-btn\" onClick={handleLogout}>Đăng xuất</button>\r\n//             </aside>\r\n\r\n//             <main className=\"main-content\">\r\n//                 <header className=\"header\">\r\n//                     <h2>Good afternoon, {user?.name || \"User\"}</h2>\r\n//                     <input type=\"text\" placeholder=\"Search or find anything...\" />\r\n//                 </header>\r\n\r\n//                 <section className=\"note-input\">\r\n//                     <textarea\r\n//                         placeholder=\"Viết ghi chú mới...\"\r\n//                         value={newNote}\r\n//                         onChange={(e) => setNewNote(e.target.value)}\r\n//                     />\r\n//                     <button className=\"add-btn\" onClick={handleAddNote}>+ Thêm ghi chú</button>\r\n//                 </section>\r\n\r\n//                 <section className=\"recent-notes\">\r\n//                     <h3>Ghi chú gần đây</h3>\r\n//                     <div className=\"notes-grid\">\r\n//                         {notes.map(note => (\r\n//                             <div key={note.id} className=\"note-card\">\r\n//                                 {note.content}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default NotesPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}